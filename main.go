package main

import (
	"log"

	"github.com/Iilun/survey/v2"
)

var (
	projectName string

	// Git specific variables.
	usingGit               bool
	gitAddRemote           bool
	gitRemoteAddr          string
	gitAddIgnore           bool
	gitIgnoreTemplates     []string
	gitAddAttributes       bool
	gitAttributesTemplates []string

	// License specific variables.
	addLicense    bool
	licenseType   string
	licenseHolder string
	licenserEmail string
)

func main() {
	survey.AskOne(&survey.Input{Message: "What's your project's name?"}, &projectName)

	// The following questions are whether ot not the user is using Git and other Git-specific questions.
	survey.AskOne(&survey.Confirm{
		Message: "Are you using Git?",
		Default: true,
	}, &usingGit)
	if usingGit {
		survey.AskOne(&survey.Confirm{
			Message: "Add a remote?",
			Default: false,
		}, &gitAddRemote)
		if gitAddRemote {
			survey.AskOne(&survey.Input{
				Message: "Where are you hosting your project? Enter the full URL:",
			}, &gitRemoteAddr)
		}

		survey.AskOne(&survey.Confirm{
			Message: "Add .gitignore?",
			Default: true,
		}, &gitAddIgnore)
		if gitAddIgnore {
			survey.AskOne(&survey.MultiSelect{
				Message: "Which templates?",
				Options: []string{
					"1c",
					"1c-bitrix",
					"a-frame",
					"actionscript",
					"ada",
					"adobe",
					"advancedinstaller",
					"adventuregamestudio",
					"agda",
					"al",
					"alteraquartusii",
					"altium",
					"amplify",
					"android",
					"androidstudio",
					"angular",
					"anjuta",
					"ansible",
					"ansibletower",
					"apachecordova",
					"apachehadoop",
					"appbuilder",
					"appceleratortitanium",
					"appcode",
					"appcode+all",
					"appcode+iml",
					"appengine",
					"aptanastudio",
					"arcanist",
					"archive",
					"archives",
					"archlinuxpackages",
					"asdf",
					"aspnetcore",
					"assembler",
					"astro",
					"ate",
					"atmelstudio",
					"ats",
					"audio",
					"autohotkey",
					"automationstudio",
					"autotools",
					"autotools+strict",
					"awr",
					"azurefunctions",
					"azurite",
					"backup",
					"ballerina",
					"basercms",
					"basic",
					"batch",
					"bazaar",
					"bazel",
					"bitrise",
					"bitrix",
					"bittorrent",
					"blackbox",
					"blender",
					"bloop",
					"bluej",
					"bookdown",
					"bower",
					"bricxcc",
					"buck",
					"c",
					"c++",
					"cake",
					"cakephp",
					"cakephp2",
					"cakephp3",
					"calabash",
					"carthage",
					"certificates",
					"ceylon",
					"cfwheels",
					"chefcookbook",
					"chocolatey",
					"circuitpython",
					"clean",
					"clion",
					"clion+all",
					"clion+iml",
					"clojure",
					"cloud9",
					"cmake",
					"cocoapods",
					"cocos2dx",
					"cocoscreator",
					"codeblocks",
					"codecomposerstudio",
					"codeigniter",
					"codeio",
					"codekit",
					"codesniffer",
					"coffeescript",
					"commonlisp",
					"compodoc",
					"composer",
					"compressed",
					"compressedarchive",
					"compression",
					"conan",
					"concrete5",
					"coq",
					"cordova",
					"craftcms",
					"crashlytics",
					"crbasic",
					"crossbar",
					"crystal",
					"cs-cart",
					"csharp",
					"cuda",
					"cvs",
					"cypressio",
					"d",
					"dart",
					"darteditor",
					"data",
					"database",
					"datarecovery",
					"dbeaver",
					"dbt",
					"defold",
					"delphi",
					"deno",
					"dframe",
					"diff",
					"direnv",
					"diskimage",
					"django",
					"dm",
					"docfx",
					"docpress",
					"docusaurus",
					"docz",
					"dotenv",
					"dotfilessh",
					"dotnetcore",
					"dotsettings",
					"doxygen",
					"dreamweaver",
					"dropbox",
					"drupal",
					"drupal7",
					"drupal8",
					"e2studio",
					"eagle",
					"easybook",
					"eclipse",
					"eiffelstudio",
					"elasticbeanstalk",
					"elisp",
					"elixir",
					"elm",
					"emacs",
					"ember",
					"ensime",
					"episerver",
					"erlang",
					"espresso",
					"executable",
					"exercism",
					"expressionengine",
					"extjs",
					"fancy",
					"fastlane",
					"finale",
					"firebase",
					"fish",
					"flashbuilder",
					"flask",
					"flatpak",
					"flex",
					"flexbuilder",
					"floobits",
					"flutter",
					"font",
					"fontforge",
					"forcedotcom",
					"forgegradle",
					"fortran",
					"freecad",
					"freepascal",
					"fsharp",
					"fuelphp",
					"fusetools",
					"games",
					"gatsby",
					"gcov",
					"genero4gl",
					"geth",
					"ggts",
					"gis",
					"git",
					"gitbook",
					"go",
					"godot",
					"goland",
					"goland+all",
					"goland+iml",
					"goodsync",
					"gpg",
					"gradle",
					"grails",
					"greenfoot",
					"groovy",
					"grunt",
					"gwt",
					"haskell",
					"helm",
					"hexo",
					"hol",
					"homeassistant",
					"homebrew",
					"hsp",
					"hugo",
					"hyperledgercomposer",
					"iar",
					"iar_ewarm",
					"iarembeddedworkbench",
					"idapro",
					"idris",
					"igorpro",
					"images",
					"infer",
					"inforcms",
					"inforcrm",
					"intellij",
					"intellij+all",
					"intellij+iml",
					"ionic3",
					"jabref",
					"janet",
					"java",
					"jboss",
					"jboss-4-2-3-ga",
					"jboss-6-x",
					"jboss4",
					"jboss6",
					"jdeveloper",
					"jekyll",
					"jenv",
					"jetbrains",
					"jetbrains+all",
					"jetbrains+iml",
					"jgiven",
					"jigsaw",
					"jmeter",
					"joe",
					"joomla",
					"jsonnet",
					"jspm",
					"julia",
					"jupyternotebooks",
					"justcode",
					"kaldi",
					"kate",
					"kdevelop4",
					"kdiff3",
					"keil",
					"kentico",
					"keystonejs",
					"kicad",
					"kirby2",
					"kirby3",
					"kobalt",
					"kohana",
					"komodoedit",
					"konyvisualizer",
					"kotlin",
					"labview",
					"labviewnxg",
					"lamp",
					"laravel",
					"latex",
					"lazarus",
					"leiningen",
					"lemonstand",
					"less",
					"liberosoc",
					"librarian-chef",
					"libreoffice",
					"lighthouseci",
					"lilypond",
					"linux",
					"lithium",
					"localstack",
					"logtalk",
					"lsspice",
					"ltspice",
					"lua",
					"lyx",
					"macos",
					"magento",
					"magento1",
					"magento2",
					"magic-xpa",
					"matlab",
					"maven",
					"mavensmate",
					"mdbook",
					"mean",
					"mercurial",
					"mercury",
					"meson",
					"metals",
					"metalsmith",
					"metaprogrammingsystem",
					"meteor",
					"meteorjs",
					"microsoftoffice",
					"mikroc",
					"mill",
					"moban",
					"modelsim",
					"modx",
					"momentics",
					"monodevelop",
					"mplabx",
					"mule",
					"nanoc",
					"nativescript",
					"ncrunch",
					"nesc",
					"netbeans",
					"nette",
					"nextjs",
					"nikola",
					"nim",
					"ninja",
					"node",
					"nodechakratimetraveldebug",
					"nohup",
					"notepadpp",
					"nova",
					"now",
					"nuxtjs",
					"nwjs",
					"objective-c",
					"obsidian",
					"ocaml",
					"octave",
					"octobercms",
					"opa",
					"opencart",
					"opencv",
					"openfoam",
					"openframeworks",
					"openframeworks+visualstudio",
					"oracleforms",
					"orcad",
					"osx",
					"otto",
					"oxideshop",
					"oxygenxmleditor",
					"packer",
					"pants",
					"particle",
					"patch",
					"pawn",
					"perl",
					"perl6",
					"ph7cms",
					"phalcon",
					"phoenix",
					"php-cs-fixer",
					"phpcodesniffer",
					"phpstorm",
					"phpstorm+all",
					"phpstorm+iml",
					"phpunit",
					"pico8",
					"pimcore",
					"pimcore4",
					"pimcore5",
					"pinegrow",
					"platformio",
					"playframework",
					"plone",
					"polymer",
					"powershell",
					"premake-gmake",
					"prepros",
					"prestashop",
					"processing",
					"progressabl",
					"psoccreator",
					"pulumi",
					"pulumi+stacks",
					"puppet",
					"puppet-librarian",
					"purebasic",
					"purescript",
					"putty",
					"pvs",
					"pycharm",
					"pycharm+all",
					"pycharm+iml",
					"pydev",
					"python",
					"pythonvanilla",
					"qml",
					"qooxdoo",
					"qt",
					"qtcreator",
					"r",
					"racket",
					"rails",
					"react",
					"reactnative",
					"reasonml",
					"red",
					"redcar",
					"redis",
					"remix",
					"remix+arc",
					"remix+cloudflarepages",
					"remix+cloudflareworkers",
					"remix+netlify",
					"remix+vercel",
					"renpy",
					"replit",
					"retool",
					"rhodesrhomobile",
					"rider",
					"robotframework",
					"root",
					"ros",
					"ros2",
					"ruby",
					"rubymine",
					"rubymine+all",
					"rubymine+iml",
					"rust",
					"rust-analyzer",
					"salesforce",
					"salesforcedx",
					"sam",
					"sam+config",
					"sas",
					"sass",
					"sbt",
					"scala",
					"scheme",
					"scons",
					"scrivener",
					"sdcc",
					"seamgen",
					"senchatouch",
					"serverless",
					"shopware",
					"silverstripe",
					"sketchup",
					"slickedit",
					"smalltalk",
					"snap",
					"snapcraft",
					"snyk",
					"solidity",
					"soliditytruffle",
					"sonar",
					"sonarqube",
					"sourcepawn",
					"spark",
					"specflow",
					"splunk",
					"spreadsheet",
					"ssh",
					"standardml",
					"stata",
					"stdlib",
					"stella",
					"stellar",
					"storybookjs",
					"strapi",
					"stylus",
					"sublimetext",
					"sugarcrm",
					"svelte",
					"svn",
					"swift",
					"swiftpackagemanager",
					"swiftpm",
					"symfony",
					"symphonycms",
					"synology",
					"synopsysvcs",
					"tags",
					"tarmainstallmate",
					"terraform",
					"terragrunt",
					"test",
					"testcomplete",
					"testinfra",
					"tex",
					"text",
					"textmate",
					"textpattern",
					"theos-tweak",
					"thinkphp",
					"tla+",
					"toit",
					"tortoisegit",
					"tower",
					"turbo",
					"turbogears2",
					"twincat3",
					"tye",
					"typings",
					"typo3",
					"typo3-composer",
					"umbraco",
					"unity",
					"unrealengine",
					"vaadin",
					"vagrant",
					"valgrind",
					"vapor",
					"vcpkg",
					"venv",
					"vercel",
					"vertx",
					"video",
					"vim",
					"virtualenv",
					"virtuoso",
					"visualbasic",
					"visualstudio",
					"visualstudiocode",
					"vivado",
					"vlab",
					"vrealizeorchestrator",
					"vs",
					"vue",
					"vuejs",
					"vvvv",
					"waf",
					"wakanda",
					"web",
					"webmethods",
					"webstorm",
					"webstorm+all",
					"webstorm+iml",
					"werckercli",
					"windows",
					"wintersmith",
					"wordpress",
					"wyam",
					"xamarinstudio",
					"xcode",
					"xcodeinjection",
					"xilinx",
					"xilinxise",
					"xilinxvivado",
					"xill",
					"xmake",
					"xojo",
					"xtext",
					"y86",
					"yalc",
					"yarn",
					"yeoman",
					"yii",
					"yii2",
					"zendframework",
					"zephir",
					"zig",
					"zsh",
					"zukencr8000",
				},
			}, &gitIgnoreTemplates)
		}

		survey.AskOne(&survey.Confirm{
			Message: "Add .gitattributes?",
			Default: true,
		}, &gitAddAttributes)
		if gitAddAttributes {
			survey.AskOne(&survey.MultiSelect{
				Message: "Which templates?",
				Options: []string{
					"actionscript",
					"ada",
					"ballerina",
					"c++",
					"csharp",
					"common",
					"deplhi",
					"drupal",
					"dyalogapl",
					"elixir",
					"flutter",
					"fortran",
					"fountain",
					"fsharp",
					"go",
					"hashicorp",
					"java",
					"lua",
					"markdown",
					"mathematica",
					"matlab",
					"microsoftshell",
					"objectivec",
					"php",
					"pascal",
					"perl",
					"powershell",
					"python",
					"r",
					"rails",
					"ruby",
					"servoy",
					"swift",
					"sql",
					"tinacms",
					"unity",
					"vim",
					"web",
					"devcontainer",
					"visualstudio",
					"visualstudiocode",
				},
			}, &gitAttributesTemplates)
		}
	}

	// The following questions are about licenses.
	survey.AskOne(&survey.Confirm{Message: "Add license?"}, &addLicense)
	if addLicense {
		survey.AskOne(&survey.Select{
			Message: "Which license would you like to add?",
			Options: []string{
				"0bsd",
				"agpl-3.0",
				"apache-2.0",
				"artistic-2.0",
				"bsd-2-clause",
				"bsd-3-clause",
				"cc0-1.0",
				"gpl-2.0",
				"gpl-3.0",
				"lgpl-3.0",
				"isc",
				"mit",
				"mpl-2.0",
				"unlicense",
			},
		}, &licenseType)
		survey.AskOne(&survey.Input{
			Message: "What should the copyright holder's name be?",
		}, &licenseHolder)
		survey.AskOne(&survey.Input{
			Message: "What should the copyright holder's email be?",
		}, &licenserEmail)
	}

	// Add robots.txt?
	// yes -> block what? enter empty line to stop.
	// Init language project?
	// yes -> which language? (bun, go, cargo, node, zig, py, c, etc)

	// This section is for writing files.
	if usingGit {
		if err := gitInit(); err != nil {
			log.Printf("Failed to initialize git: %v\n", err)
		}
	}
	if gitAddIgnore {
		if err := createGitIgnore(); err != nil {
			log.Printf("Failed to create gitignore: %v\n", err)
		}
	}
	if gitAddAttributes {
		if err := createGitAttributes(); err != nil {
			log.Printf("Failed to create gitattributes: %v\n", err)
		}
	}
	if gitAddRemote {
		if err := createGitRemote(); err != nil {
			log.Printf("Failed to add git remote: %v\n", err)
		}
	}

	if addLicense {
		if err := createLicense(); err != nil {
			log.Printf("Failed to create LICENSE: %v\n", err)
		}
	}
}
